/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ComicsComicIdRouteImport } from './routes/comics/$comicId'
import { Route as ApiComicsChar123ComicIdChar125RouteImport } from './routes/api/comics/{-$comicId}'
import { Route as ApiComicsComicIdPagesChar123PageIdChar125RouteImport } from './routes/api/comics/$comicId.pages.{-$pageId}'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ComicsComicIdRoute = ComicsComicIdRouteImport.update({
  id: '/comics/$comicId',
  path: '/comics/$comicId',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiComicsChar123ComicIdChar125Route =
  ApiComicsChar123ComicIdChar125RouteImport.update({
    id: '/api/comics/{-$comicId}',
    path: '/api/comics/{-$comicId}',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiComicsComicIdPagesChar123PageIdChar125Route =
  ApiComicsComicIdPagesChar123PageIdChar125RouteImport.update({
    id: '/api/comics/$comicId/pages/{-$pageId}',
    path: '/api/comics/$comicId/pages/{-$pageId}',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/comics/$comicId': typeof ComicsComicIdRoute
  '/api/comics/{-$comicId}': typeof ApiComicsChar123ComicIdChar125Route
  '/api/comics/$comicId/pages/{-$pageId}': typeof ApiComicsComicIdPagesChar123PageIdChar125Route
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/comics/$comicId': typeof ComicsComicIdRoute
  '/api/comics/{-$comicId}': typeof ApiComicsChar123ComicIdChar125Route
  '/api/comics/$comicId/pages/{-$pageId}': typeof ApiComicsComicIdPagesChar123PageIdChar125Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/comics/$comicId': typeof ComicsComicIdRoute
  '/api/comics/{-$comicId}': typeof ApiComicsChar123ComicIdChar125Route
  '/api/comics/$comicId/pages/{-$pageId}': typeof ApiComicsComicIdPagesChar123PageIdChar125Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/comics/$comicId'
    | '/api/comics/{-$comicId}'
    | '/api/comics/$comicId/pages/{-$pageId}'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/comics/$comicId'
    | '/api/comics/{-$comicId}'
    | '/api/comics/$comicId/pages/{-$pageId}'
  id:
    | '__root__'
    | '/'
    | '/comics/$comicId'
    | '/api/comics/{-$comicId}'
    | '/api/comics/$comicId/pages/{-$pageId}'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ComicsComicIdRoute: typeof ComicsComicIdRoute
  ApiComicsChar123ComicIdChar125Route: typeof ApiComicsChar123ComicIdChar125Route
  ApiComicsComicIdPagesChar123PageIdChar125Route: typeof ApiComicsComicIdPagesChar123PageIdChar125Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/comics/$comicId': {
      id: '/comics/$comicId'
      path: '/comics/$comicId'
      fullPath: '/comics/$comicId'
      preLoaderRoute: typeof ComicsComicIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/comics/{-$comicId}': {
      id: '/api/comics/{-$comicId}'
      path: '/api/comics/{-$comicId}'
      fullPath: '/api/comics/{-$comicId}'
      preLoaderRoute: typeof ApiComicsChar123ComicIdChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/comics/$comicId/pages/{-$pageId}': {
      id: '/api/comics/$comicId/pages/{-$pageId}'
      path: '/api/comics/$comicId/pages/{-$pageId}'
      fullPath: '/api/comics/$comicId/pages/{-$pageId}'
      preLoaderRoute: typeof ApiComicsComicIdPagesChar123PageIdChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ComicsComicIdRoute: ComicsComicIdRoute,
  ApiComicsChar123ComicIdChar125Route: ApiComicsChar123ComicIdChar125Route,
  ApiComicsComicIdPagesChar123PageIdChar125Route:
    ApiComicsComicIdPagesChar123PageIdChar125Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
